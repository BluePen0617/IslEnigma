generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model credit_card {
  credit_card_id Int      @id @default(autoincrement())
  member_id      Int?
  number         String   @db.VarChar(16)
  expiry         DateTime @db.Date
  cvv            String   @db.VarChar(4)
  member         member?  @relation(fields: [member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model customer_order {
  order_id     String       @id @db.VarChar(191)
  member_id    Int
  total_amount Int
  status       String       @db.VarChar(7)
  order_date   DateTime
  member       member       @relation(fields: [member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction)
  order_info   order_info?
  order_item   order_item[]
}

model event {
  event_id     String    @id @db.VarChar(255)
  type         String    @db.VarChar(100)
  title        String    @db.VarChar(255)
  content      String?
  publish_time DateTime? @default(now()) @db.Timestamptz(6)
  start_time   DateTime  @db.Timestamptz(6)
  end_time     DateTime  @db.Timestamptz(6)
  image        Json?
  session      String?   @db.VarChar(100)
  location     String?   @db.VarChar(255)
}

model facility {
  facility_id     String            @id @db.VarChar(255)
  title           String            @db.VarChar(255)
  image           Json?
  category        String            @db.VarChar(255)
  des             String?
  content         String?
  area            String            @db.VarChar(255)
  location        String            @db.VarChar(255)
  open_time       String?           @db.VarChar(255)
  data_maintain   DateTime?         @db.Date
  class_name      String?           @db.VarChar(255)
  remarks         String?
  facility_rule   facility_rule[]
  restaurant_menu restaurant_menu[]
}

model facility_rule {
  facility_rule_id Int       @id @default(autoincrement())
  facility_id      String?   @db.VarChar(255)
  rule_type        String?   @db.VarChar(50)
  rule_value       String?   @db.VarChar(255)
  facility         facility? @relation(fields: [facility_id], references: [facility_id], onDelete: NoAction, onUpdate: NoAction)
}

model member {
  member_id      Int              @id @default(autoincrement())
  name           String           @db.VarChar(50)
  address        String?          @db.VarChar(100)
  birth          DateTime?        @db.Date
  account        String           @unique @db.VarChar(50)
  password       String           @db.VarChar(64)
  phone          String?          @db.VarChar(20)
  photo          Json?
  credit_card    credit_card[]
  customer_order customer_order[]
}

model news {
  news_id     String    @id @db.VarChar(10)
  title       String    @db.VarChar(255)
  des         String
  create_time DateTime? @default(now()) @db.Timestamptz(6)
  image       Json?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_info {
  order_info_id  String         @id @db.VarChar(191)
  order_id       String         @unique @db.VarChar(191)
  customer       String         @db.VarChar(191)
  phone_number   String         @db.VarChar(191)
  address        String         @db.VarChar(191)
  payment_method String         @db.VarChar(10)
  customer_order customer_order @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

model order_item {
  order_item_id  String         @id @db.VarChar(191)
  order_id       String         @db.VarChar(191)
  room_id        String?        @db.VarChar(191)
  ticket_id      String?        @db.VarChar(191)
  check_in_date  DateTime?
  check_out_date DateTime?
  people_count   Int?
  quantity       Int
  booked_date    DateTime?
  valid_date     DateTime?
  customer_order customer_order @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
  room           room?          @relation(fields: [room_id], references: [room_id], onUpdate: NoAction)
  ticket         ticket?        @relation(fields: [ticket_id], references: [ticket_id], onUpdate: NoAction)
}

model restaurant_menu {
  restaurant_menu_id Int       @id @default(autoincrement())
  facility_id        String?   @db.VarChar(20)
  menu_item          String    @db.VarChar(255)
  price              Decimal   @db.Decimal(10, 2)
  facility           facility? @relation(fields: [facility_id], references: [facility_id], onDelete: NoAction, onUpdate: NoAction)
}

model room {
  room_id     String       @id @db.VarChar(191)
  room_type   String       @db.VarChar(191)
  room_count  Int          @default(2)
  description String?      @db.VarChar(191)
  price       Int
  available   Boolean
  capacity    Int          @default(2)
  img         Json?
  order_item  order_item[]
}

model ticket {
  ticket_id  String       @id @db.VarChar(191)
  type       String       @db.VarChar(191)
  price      Int
  img        Json?
  order_item order_item[]
}
